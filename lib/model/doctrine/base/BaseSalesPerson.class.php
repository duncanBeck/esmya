<?php

/**
 * BaseSalesPerson
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $region_id
 * @property integer $user_id
 * @property boolean $is_active
 * @property boolean $is_admin
 * @property Region $Region
 * @property sfGuardUser $User
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $Days
 * @property Doctrine_Collection $Targets
 * @property Doctrine_Collection $Chats
 * 
 * @method string              getName()      Returns the current record's "name" value
 * @method integer             getRegionId()  Returns the current record's "region_id" value
 * @method integer             getUserId()    Returns the current record's "user_id" value
 * @method boolean             getIsActive()  Returns the current record's "is_active" value
 * @method boolean             getIsAdmin()   Returns the current record's "is_admin" value
 * @method Region              getRegion()    Returns the current record's "Region" value
 * @method sfGuardUser         getUser()      Returns the current record's "User" value
 * @method Doctrine_Collection getUsers()     Returns the current record's "Users" collection
 * @method Doctrine_Collection getDays()      Returns the current record's "Days" collection
 * @method Doctrine_Collection getTargets()   Returns the current record's "Targets" collection
 * @method Doctrine_Collection getChats()     Returns the current record's "Chats" collection
 * @method SalesPerson         setName()      Sets the current record's "name" value
 * @method SalesPerson         setRegionId()  Sets the current record's "region_id" value
 * @method SalesPerson         setUserId()    Sets the current record's "user_id" value
 * @method SalesPerson         setIsActive()  Sets the current record's "is_active" value
 * @method SalesPerson         setIsAdmin()   Sets the current record's "is_admin" value
 * @method SalesPerson         setRegion()    Sets the current record's "Region" value
 * @method SalesPerson         setUser()      Sets the current record's "User" value
 * @method SalesPerson         setUsers()     Sets the current record's "Users" collection
 * @method SalesPerson         setDays()      Sets the current record's "Days" collection
 * @method SalesPerson         setTargets()   Sets the current record's "Targets" collection
 * @method SalesPerson         setChats()     Sets the current record's "Chats" collection
 * 
 * @package    esmya
 * @subpackage model
 * @author     Duncan Watson duncan@duncanwatson.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSalesPerson extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sales_person');
        $this->hasColumn('name', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('region_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('is_admin', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Region', array(
             'local' => 'region_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardUser as Users', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'group_id',
             'foreign' => 'user_id'));

        $this->hasMany('Day as Days', array(
             'local' => 'id',
             'foreign' => 'sales_person_id'));

        $this->hasMany('Target as Targets', array(
             'local' => 'id',
             'foreign' => 'sales_person_id'));

        $this->hasMany('Chat as Chats', array(
             'local' => 'id',
             'foreign' => 'sales_person_id'));
    }
}